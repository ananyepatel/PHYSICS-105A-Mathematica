(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226431,       4845]
NotebookOptionsPosition[    222674,       4781]
NotebookOutlinePosition[    223027,       4797]
CellTagsIndexPosition[    222984,       4794]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Ananye Patel
UID: 404808384
ananye.97@gmail.com
PHYSICS 105A Mathematica HW 2\[LineSeparator]\
\>", "Text",
 CellChangeTimes->{{3.757445760200837*^9, 3.7574458134876966`*^9}, {
  3.757445848384712*^9, 
  3.757445891999769*^9}},ExpressionUUID->"351596ac-ba08-454b-8e86-\
fcde2a055e4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Problem", " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<The solution x[t] given the conditions x''[t]==a, x'[0]==v0, x[0]==x0 \
is: \>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "==", "a"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "==", "x0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "0", "]"}], "==", "v0"}]}], "}"}], ",", 
      RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.757445936873597*^9, 3.757445937550067*^9}, {
  3.757446334405555*^9, 3.7574463579723673`*^9}, {3.75744639442866*^9, 
  3.757446497215658*^9}, {3.757446532097176*^9, 3.757446547467024*^9}, {
  3.7574465896085367`*^9, 3.7574468327134542`*^9}, {3.7574468629179707`*^9, 
  3.7574470194462433`*^9}, {3.757447052332787*^9, 3.7574470896699543`*^9}, {
  3.7574471490112867`*^9, 3.757447154679022*^9}, {3.757447233821755*^9, 
  3.7574472636049213`*^9}, {3.757447423632408*^9, 3.757447436575101*^9}, {
  3.7574475552354937`*^9, 3.757447556986554*^9}, {3.7574476737162333`*^9, 
  3.757447681171801*^9}, {3.757447726478642*^9, 3.7574477585372334`*^9}, {
  3.757447863155539*^9, 3.7574478718643923`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"30f763eb-cb62-464f-8d01-2e3085a540a7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"The solution x[t] given the conditions x''[t]==a, \
x'[0]==v0, x[0]==x0 is: \"\>"], "Print",
 CellChangeTimes->{3.757447872880597*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"aa6702cc-87fc-4ca0-9fe9-9bc996498b24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        SuperscriptBox["t", "2"]}], "+", 
       RowBox[{"2", " ", "t", " ", "v0"}], "+", 
       RowBox[{"2", " ", "x0"}]}], ")"}]}]}], "}"}], "}"}]], "Print",
 CellChangeTimes->{3.7574478729091988`*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"aa166834-e0de-453c-996b-6653c3ffc4e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"t", "^", "2"}]}], "+", 
      RowBox[{"2", " ", "t", " ", "v0"}], "+", 
      RowBox[{"2", " ", "x0"}]}], ")"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"soln", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", "10"}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "5"}]}], "}"}], ",", 
    
    RowBox[{"x", "[", "t", "]"}], ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", "soln"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.757447891698535*^9, 3.757447897900566*^9}, {
  3.7574479457815123`*^9, 3.757448009099195*^9}, {3.7574482149382277`*^9, 
  3.75744827748805*^9}, {3.757448369810828*^9, 3.75744843876112*^9}, {
  3.757448493429078*^9, 3.757448496869289*^9}, {3.757449394595359*^9, 
  3.757449427982781*^9}, {3.757449485445016*^9, 3.757449527105998*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"fa02a71e-156a-4b40-8bd4-da6f96e8b698"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{"2", " ", "t", " ", "v0"}], "+", 
      RowBox[{"2", " ", "x0"}]}], ")"}]}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.7574484521329327`*^9, 3.7574494139592123`*^9, 3.757449455086381*^9, {
   3.757449489056718*^9, 3.757449530722425*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"618d2e67-e4ef-41d7-8b1d-00133f66ff19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"2", "+", 
     RowBox[{"5", " ", "t"}], "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["t", "2"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7574484521329327`*^9, 3.7574494139592123`*^9, 3.757449455086381*^9, {
   3.757449489056718*^9, 3.7574495307351637`*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"c9be915e-6494-46a4-ae8b-dd98263a310a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtWHc01n/0f6wyMysr6ymhRFYZ9b6RWSQJkTIz6mtl9diR0FC2JKQ0SINE
P7w/haSEZGSFrOd5yN7z53fO76977rn33PE653Ve91xJB08zZ0YSicTBQCL9
nw0ZMZ7e2CATRvqW7RsoGIaDdsx1rZKJYuuh6ldqwWDC07vwYYlMEEorWrby
wSCh7rXmOUMmmhQr6wnhYPgcl8DaN0wmCpxy3B/MBQHrgXYx4geZuJrfnZWa
HwRJvnYnwjPIhPx76ckywSDIZ7j6hHSITBiUsco8WrgGLM76SkK2UsR8Zz/3
ZHoA8P+uufL4viQRxT/GER/qB2ZVDxxlv0kQGWdMxwyjr0LQxJEr9wbECU2r
VraKUG8oDXjg/vqUGOHdEvtZ38UTTBLOSqynixK/lqQi3csvg35mhYnBmDBR
E5fhdtvGFfJqr7VdtREirlUv/H7g4gwXopK2Nz7fSURyjQ+cvOwAoXZMhRz8
O4jBxoi27PyLQJIXxzo3BAin9bp19VVr6LyVfjO/lY+4fqXooYi5BYiyu76Y
1eYlVmwcX55wMIPLqnIsXaLchN1esxvrO4zB8dCf51VVHET9qa1pDz31QC5Q
Y8PjCSuhUt78iIvlGBA9JnIDKayEQSOfgdYEgIWO41nLWFZCbMZM/1oHwPVt
t/ORBysh+t8vfbFCgI4nPZY8h1kJPblWUwErgJif4W/eft9KTCR8YLG3RTAs
V2s/O72FsFMb/WH2Qwtyes5UXzvGQnAKfrigwXQYlAaVlltUWIjkyt6vCv2H
oJrOq6gow0I0eN2XP4oPwfBCY8bwNhbCfDF++GnQIZDjO3n1TDczUZC4tCNn
Tg3e6R2Xkg9gJm6thHrrjatC9WuV8L4CJkLinhmX8bQynC3hL9HMZiLqCh5+
tf+lDMPl06MpiUzE7lbP0PhiZWD99sbSmMJE/DN426EaoAzGg/sVPuozEU3l
2SaFa0rQJrjnT+JfRqK69aCSCbcSjERs19IXZCQo9aJ9hrqKwB7yeiKRnZGI
kdttvX+vIhwINMztW2UgZJgPyuxnUwR/jxB2Sj8Dsdu8JHxrhgJssRn6XfBy
Mx7x99Oe1wdgt8p7P74jDESyouEX+7/7wWHY/HWPPYngGzrV3u4rC9H94w5y
5iSiKaqifgrJwsvumB0BeiTiuYiaux6HLEw3l4fw7CMRJQcMMrMeywBjmGFa
NHUDS9InBnhb9gI6SPt5mmsDO5cYz8wdk4aPyTK6VIs1fPeJtnC5IRlYbUYc
GbTW8N6py+PromSwkMi7Liy5hs1b609SJqVg+iWZODm6il2cVJ8Lp0mBLCGm
+TZsFbtm5nQw0CUhjS5wkPJ8BU9QhqXd0yTADzHs4lxewtO1Om3HkSh8ZiY0
9/Qu4QbdYM5/MyLA8y3U+mj1Em6eJltueSECBearqV53l/CJTkL2toAIDLot
8LVKLeGNP4rVg5NCYJb0j/XRiUVsh2k/6ip3giKtY1Yhcx5Ld1eqOL7mB99J
edmdUfN4o2yiVtefH0oXImzX3eexxu9DNXFH+OHYFrkv9YfncVcr17rmDz4w
I1NS3VrmcGVrk6vmFC/42Qpr5HLM4fWRd1KFJ3jgo5OHR9z0LGast7T8IMgD
65c/P/bumMVNfXvHdOu5IZrizgHPZnHpbO6ANjM3pKV+7O7WnsVf93yr9g/h
go8/rcN2UGbwYEHDqS9J7LD+u7BozW4Ga0WQVvdosoN2HyN1UH8GW7fZBRv9
ZYPv4y9Ni7bPYDrjq6V+JTbo5liRNH07jQ2crw4b9WyFDd2M6ljqFCadKo1h
tmSB48YTi16NU/iNQnPAWzYWiDHXkbcqmcJS94U1yRXMwOM4miwdNYUt2tSO
npVmBqlwTZcq8SnM7J6pNsPABMc/drGtWUxisxKpyR1/SFD48ql6reYkliq+
65adSgLBDE+3+xKTePfhTG1eMxK0LWxJONEygb2e6uw1S9xAe4IseDKXx7Hr
kwQHh5traNGG7nmwehyLMiWeGmVdQ/VaoY01d8axosfvFe3bq8h3/endcYlx
HOOmlHAhbQV9jpjjBP1/uGlWqkTvyxJKcYi90sLzDyeVnMjUtVhCbjq76l07
x3B5VJkOP3UR8bDo3rr/3xjW0nNqEOZdRBdjktgGEkdxi+18Z2fgPFq9q7wl
uo+GA3s5f4plzaAmz1pn4Zc07O4SXcB2cgblmtrUFF6l4Y8rx/WrlqeREV9k
VPsWGo4xvP/xse00Sk9uZpSVp+LP1y6l8alPoSv+lxwq5kdwtROrx9XZSQSW
y59OEyN4//kJxty3k4gqKBVBOTOCpbxuu3scnERqD703vl8bxqbntjhcuTOO
2ENYLtrpDOOYuQcMwpLjqMc2vXKWcxgHvywTdy79h6LEP4Xsyh7CxReS239N
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
Af8LRHtA+A==
       "]]},
     Annotation[#, "Charting`Private`Tag$16499#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 551.999957142858}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7574484521329327`*^9, 3.7574494139592123`*^9, 3.757449455086381*^9, {
   3.757449489056718*^9, 3.7574495308271713`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"7df76d6b-17fd-45a5-ad35-ea283fd9233e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7574484486230097`*^9, 
  3.7574495454719*^9},ExpressionUUID->"766d4865-703f-4289-8ac9-8af326d0faa7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Problem", " ", "2"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnlist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"m", "*", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "1"], "''"}], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}]}], "-", 
       RowBox[{"2", "*", "k", "*", 
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"m", "*", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "2"], "''"}], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}]}], "-", 
       RowBox[{"2", "*", "k", "*", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "0", "]"}], "\[Equal]", "L"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<The solutions \!\(\*SubscriptBox[\(x\), \(1\)]\)[t] and \
\!\(\*SubscriptBox[\(x\), \(2\)]\)[t] to the DEs given the initial conditions \
\!\(\*SubscriptBox[\(x\), \(1\)]\)'[0]=0, \!\(\*SubscriptBox[\(x\), \
\(2\)]\)'[0]=0, \!\(\*SubscriptBox[\(x\), \(1\)]\)[0]=0, \
\!\(\*SubscriptBox[\(x\), \(2\)]\)[0]=L are: \>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"soln", "=", 
    RowBox[{"DSolve", "[", 
     RowBox[{"eqnlist", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", "t"}], 
     "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.757449564275961*^9, 3.75744957241807*^9}, {
  3.757449621827248*^9, 3.757449654751598*^9}, {3.757449718619989*^9, 
  3.757450167011182*^9}, {3.757450211048098*^9, 3.757450226348303*^9}, {
  3.757450283185894*^9, 3.757450285653151*^9}, {3.757450371993515*^9, 
  3.7574503724018707`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"2baa8e1f-5916-4d9a-a50b-d72ca0167835"],

Cell[CellGroupData[{

Cell[BoxData["\<\"The solutions \\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)[t] \
and \\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)[t] to the DEs given the \
initial conditions \\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)'[0]=0, \
\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)'[0]=0, \
\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)[0]=0, \
\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)[0]=L are: \"\>"], "Print",
 CellChangeTimes->{3.757450227738151*^9, 3.757450373963109*^9},
 CellLabel->
  "During evaluation of \
In[87]:=",ExpressionUUID->"e9074027-befe-4ce7-98e2-e0a38d55ba10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]}], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["k"], " ", "t"}], 
         SqrtBox["m"]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"], " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"], " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]]}]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["3"], " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]]}]]}], ")"}], " ", "L"}]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]}], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"], " ", 
          SqrtBox["k"], " ", "t"}], 
         SqrtBox["m"]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["3"], " ", 
           SqrtBox["k"], " ", "t"}], 
          SqrtBox["m"]]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]], "+", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["3"], " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]]}]], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            SqrtBox["3"], " ", 
            SqrtBox["k"], " ", "t"}], 
           SqrtBox["m"]]}]]}], ")"}], " ", "L"}]}]}], "}"}], "}"}]], "Print",
 CellChangeTimes->{3.757450227738151*^9, 3.757450374016191*^9},
 CellLabel->
  "During evaluation of \
In[87]:=",ExpressionUUID->"41882d40-c415-43f5-9fd1-3d313cc7fdc3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "3"}], ";", 
  RowBox[{"k", "=", "0.3"}], ";", 
  RowBox[{"L", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], "/.", "soln"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.757450391390718*^9, {3.757450432114242*^9, 3.7574504641774693`*^9}, {
   3.757450506029888*^9, 3.757450685429536*^9}, {3.757450734330267*^9, 
   3.7574507923943043`*^9}, {3.7574508386977243`*^9, 3.757450841658057*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"c141fe9d-3d8e-4336-a36e-b89609bed999"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
jBr+3digw4iRmTfnJInxPy0cvm0=
       "]], 
      LineBox[{{-0.046497751346938475`, 
       0.0005404712674862755}, {-0.04102517630333275, 
       0.00042074266720955084`}, {-0.03585663320659401, 
       0.00032141076125558564`}, {-0.03375881277321183, 
       0.00028490353660548675`}}]},
     Annotation[#, "Charting`Private`Tag$17686#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
64bw//f9Cfr/35/8H5x6hHA=
       "]]},
     Annotation[#, "Charting`Private`Tag$17686#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-4.2305125646125585`, 4.999998815283574}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.757450842862681*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"da624ef6-77b8-4496-9ec0-7e6d6664d7da"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.757449543720536*^9, 
  3.757449543730795*^9}},ExpressionUUID->"89223d91-0667-4089-9f4d-\
29005c19d4b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Problem", " ", "3"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deqn", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "*", "\[Beta]", "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           SubscriptBox["\[Omega]", "0"], ")"}], "^", "2"}], ")"}], "*", 
        RowBox[{"x", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "==", 
      SubscriptBox["A", "0"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"deqn", ",", 
    RowBox[{"{", 
     RowBox[{"x", "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], ":=", "0.05"}], ";", 
  RowBox[{
   SubscriptBox["\[Omega]", "0"], ":=", 
   RowBox[{"2", "*", "Pi"}]}], ";", 
  RowBox[{"\[Beta]", ":=", 
   RowBox[{"Pi", "/", "7"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], ":=", "0.05"}], ";", 
  RowBox[{
   SubscriptBox["\[Omega]", "0"], ":=", 
   RowBox[{"2", "*", "Pi"}]}], ";", 
  RowBox[{"\[Beta]", ":=", 
   RowBox[{"5", "*", 
    RowBox[{"Pi", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], ":=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/.", 
     RowBox[{
      SubscriptBox["\[Omega]", "0"], "\[Rule]", 
      RowBox[{"2", "*", "Pi"}]}]}], "/.", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"2", "*", "Pi"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", "[", "\[Beta]_", "]"}], "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"plot", "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"\[Beta]", ",", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"traj", "[", "\[Beta]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", 
     RowBox[{"4", "*", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.75745102096089*^9, 3.75745115339482*^9}, {
   3.757451204592142*^9, 3.7574513260498962`*^9}, {3.757451420209597*^9, 
   3.757451451976988*^9}, {3.757451486672697*^9, 3.757451548876697*^9}, {
   3.7574516898810472`*^9, 3.757451698956052*^9}, {3.7574517956123533`*^9, 
   3.75745186406046*^9}, {3.7574519174321337`*^9, 3.757451917963643*^9}, {
   3.757452007762662*^9, 3.757452096192705*^9}, {3.757452127108322*^9, 
   3.757452178555068*^9}, {3.757453940960821*^9, 3.757453942910577*^9}, 
   3.757454106193242*^9, 3.7574541506045017`*^9, 3.757454253739107*^9, {
   3.7574552692580442`*^9, 3.757455304440003*^9}, {3.757455356986109*^9, 
   3.757455448287137*^9}, {3.757455503400298*^9, 3.75745551199343*^9}, {
   3.757456282219201*^9, 3.757456377603279*^9}, {3.757456485741146*^9, 
   3.757456521974875*^9}, {3.757456555975272*^9, 3.757456560945176*^9}, {
   3.757456591160201*^9, 3.757456604890169*^9}, {3.757456637221889*^9, 
   3.757456643827628*^9}, {3.7574567114372063`*^9, 3.7574567400553293`*^9}, {
   3.757456901166327*^9, 3.757456936406657*^9}, {3.7574569699199247`*^9, 
   3.7574569726890717`*^9}, {3.757457114717371*^9, 3.757457130943226*^9}, {
   3.757457177143633*^9, 3.757457202238525*^9}, {3.757457330840025*^9, 
   3.757457461171639*^9}},
 CellLabel->
  "In[812]:=",ExpressionUUID->"a47bf965-95d0-4efb-a225-6649e66d877f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
     RowBox[{
      SubscriptBox["A", "0"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Beta]"}], "-", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Beta]", "2"], "-", 
                SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], ")"}]}]]}], " ",
          "\[Beta]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], "-", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], ")"}]}]], " ", 
         "\[Beta]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], "-", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], ")"}]}]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Beta]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["\[Beta]", "2"], "-", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], ")"}]}]], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.757453950764147*^9, {3.7574541218807917`*^9, 3.757454151016184*^9}, 
   3.7574542543743143`*^9, 3.757455307435153*^9, {3.757455363009901*^9, 
   3.7574553988325253`*^9}, {3.7574554303688393`*^9, 3.757455450274148*^9}, 
   3.757455513602841*^9, 3.757456382388397*^9, 3.757456523593402*^9, 
   3.757456562815567*^9, 3.757456606076771*^9, 3.757456645733593*^9, {
   3.7574567184150143`*^9, 3.757456740578875*^9}, {3.757456914406567*^9, 
   3.757456937919743*^9}, 3.757456974082659*^9, {3.757457118392558*^9, 
   3.7574571504171047`*^9}, {3.757457186887327*^9, 3.757457202857049*^9}, {
   3.757457431570582*^9, 3.757457489441434*^9}},
 CellLabel->
  "Out[814]=",ExpressionUUID->"4707a211-ed88-46b6-9c39-43cf705c2b2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{-8.785725706482252, 
       0.39866386319624286`}, {-8.784442328596958, 
       0.378240171135179}, {-8.778354901956732, 
       0.2797101864533342}, {-8.772267475316504, 
       0.18130907325469764`}, {-8.760092622036051, -0.014536342074320308`}, \
{-8.73593358502302, -0.39547896296586615`}}], 
      LineBox[{{-6.816921568651318, 
       0.39866386319624286`}, {-6.8094268745106135`, 
       0.35070724223361077`}, {-6.7831994435173115`, 
       0.17932489845924046`}, {-6.730744581530707, -0.16125329093543928`}, \
{-6.724628401719642, -0.19949182401877913`}, {-6.718512221908577, \
-0.23722724251821103`}, {-6.706279862286447, -0.31097858961081637`}, \
{-6.691430819937364, -0.39547896296586615`}}], LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAb5b7KnWCFcDkcAz/hk/Zvy7NbbTg
fRXAyeJ3V5eU2L9gPLKUqXcVwMObwnKkgte/kqv2dHJxFcD302YKdGnWv/aJ
fzUEZRXA0FzhdCYj1L+/RpG2J0wVwPzDQvGVp86/8rXVlvBFFcCLlHbAnSnM
vyQlGne5PxXAjj48Mqikyb+IA6M3SzMVwMTAvZSqicS/UMC0uG4aFcDImtZo
klW0v4Iv+Zg3FBXAeC5P1PpArr+0nj15AA4VwJlP8cUR2qO/GH3GOZIBFcAJ
uFHGnlRbP+A52Lq16BTA4ifwEiK7tD8SqRybfuIUwMANeE1wrrk/RBhhe0fc
FMDSNsPlUpG+P6j26TvZzxTA+mZ5AHwPxD9ws/u8/LYUwDdsTYrqFc0/oiJA
ncWwFMADPH2J0DbPP9SRhH2OqhTAtw8U7ZSk0D84cA0+IJ4UwFeHvjG9n9I/
at9RHumXFMAWx6srEpHTP5xOlv6xkRTANegKvtN51D8ALR+/Q4UUwK31G2t2
MNY/fBZBXoV+FMCXxywm0Q7XP/f/Yv3GdxTAQ9spEMnh1z9y6YScCHEUwJvF
ZicTqdg/7tKmO0pqFMAet9X1aWTZPy0oNMEVaRTAp5ehb7WD2T/4su13
       "]], 
      LineBox[CompressedData["
1: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
wQp/9ND/g+iRiQ==
       "]], 
      LineBox[{{-7.7973753631939795`, 
       0.39866386319624286`}, {-7.775024107436275, 
       0.17041735672910402`}, {-7.7688614040175095`, 
       0.10691294490911121`}, {-7.762698700598744, 
       0.04359900905099787}, {-7.750373293761212, -0.0820839560456971}, \
{-7.72572248008615, -0.3271160084806602}, {-7.719559776667384, \
-0.3865375714759652}, {-7.718618098373201, -0.39547896296586615`}}], 
      LineBox[{{-5.851199662352888, 0.39866386319624286`}, {-5.84055498482795,
        0.35841336411582364`}, {-5.815789158469533, 
       0.2601595819620007}, {-5.8095977018799285`, 
       0.2348634219775345}, {-5.803406245290325, 
       0.2093530489706308}, {-5.791023332111116, 
       0.15784843492899864`}, {-5.7662575057527, 
       0.05401420536891365}, {-5.716725853035866, -0.14824262883301656`}, \
{-5.710534396446262, -0.17228731784851672`}, {-5.704342939856658, \
-0.19593877194048462`}, {-5.6919600266774495`, -0.24192876370246347`}, \
{-5.685768570087845, -0.2642028144295469}, {-5.679577113498241, \
-0.28595474421306855`}, {-5.667194200319033, -0.32777352109682534`}, \
{-5.661002743729428, -0.34778354365636943`}, {-5.654811287139824, \
-0.36715787065505673`}, {-5.645265860256355, -0.39547896296586615`}}], 
      LineBox[{{-8.29042447286873, -0.39547896296586615`}, \
{-8.289192921926054, -0.3799778918828353}, {-8.282589540570026, \
-0.29463949941047834`}, {-8.275986159214, -0.20929979477974447`}, \
{-8.262779396501948, -0.039201172889348324`}, {-8.23636587107784, 
       0.2946557633778686}, {-8.229762489721814, 
       0.3759829794546883}, {-8.227895058824723, 0.39866386319624286`}}], 
      LineBox[{{-6.330938131398747, -0.39547896296586615`}, \
{-6.326044804568834, -0.3711390218794237}, {-6.312780535515104, \
-0.3038816413980614}, {-6.286251997407644, -0.16595245397272865`}, \
{-6.279619862880779, -0.13111505875086807`}, {-6.272987728353913, \
-0.09625746641855706}, {-6.259723459300183, -0.026723103373749956`}, \
{-6.233194921192723, 0.10996207747402244`}, {-6.226562786665858, 
       0.1432991644426604}, {-6.219930652138993, 
       0.17619032649291655`}, {-6.206666383085263, 
       0.2404189047890103}, {-6.200034248558398, 
       0.27165139069788674`}, {-6.193402114031533, 
       0.3022282580473709}, {-6.180137844977803, 
       0.36122049184954597`}, {-6.173505710450938, 
       0.3895423861605292}, {-6.1713042541641565`, 0.39866386319624286`}}], 
      LineBox[{{-7.305377701171086, -0.39547896296586615`}, \
{-7.2572420075766, -0.0006778306195440961}, {-7.250563349442034, 
       0.05364057921425471}, {-7.243884691307469, 
       0.10754017778444366`}, {-7.230527375038337, 
       0.21371594214784298`}, {-7.206233639548601, 0.39866386319624286`}}], 
      LineBox[{{-9.779339353516189, 
       0.39866386319624286`}, {-9.779177382911355, 
       0.394552932003021}, {-9.754641581919646, -0.2231238389526974}, \
{-9.74850763167172, -0.37517116883111984`}, {-9.74768080546307, \
-0.39547896296586615`}}], 
      LineBox[{{-9.281865725020198, -0.39547896296586615`}, \
{-9.28158143274674, -0.38971595438255446`}, {-9.274931527783012, \
-0.2550369258602967}, {-9.261631717855558, 
       0.013016552000285614`}, {-9.242073721119183, 0.39866386319624286`}}]},
     Annotation[#, "Charting`Private`Tag$42183#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-0.39547896296586615`, 0.39866386319624286`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757453950764147*^9, {3.7574541218807917`*^9, 3.757454151016184*^9}, 
   3.7574542543743143`*^9, 3.757455307435153*^9, {3.757455363009901*^9, 
   3.7574553988325253`*^9}, {3.7574554303688393`*^9, 3.757455450274148*^9}, 
   3.757455513602841*^9, 3.757456382388397*^9, 3.757456523593402*^9, 
   3.757456562815567*^9, 3.757456606076771*^9, 3.757456645733593*^9, {
   3.7574567184150143`*^9, 3.757456740578875*^9}, {3.757456914406567*^9, 
   3.757456937919743*^9}, 3.757456974082659*^9, {3.757457118392558*^9, 
   3.7574571504171047`*^9}, {3.757457186887327*^9, 3.757457202857049*^9}, {
   3.757457431570582*^9, 3.757457489995489*^9}},
 CellLabel->
  "Out[816]=",ExpressionUUID->"af701279-4354-42c2-8d16-45b115084347"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
GtYImzJc2d2VgGK3yEQP3QGN/wEsbrU0
       "]]},
     Annotation[#, "Charting`Private`Tag$42227#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-1.2293530416622396`*^34, 0.049997680216051874`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757453950764147*^9, {3.7574541218807917`*^9, 3.757454151016184*^9}, 
   3.7574542543743143`*^9, 3.757455307435153*^9, {3.757455363009901*^9, 
   3.7574553988325253`*^9}, {3.7574554303688393`*^9, 3.757455450274148*^9}, 
   3.757455513602841*^9, 3.757456382388397*^9, 3.757456523593402*^9, 
   3.757456562815567*^9, 3.757456606076771*^9, 3.757456645733593*^9, {
   3.7574567184150143`*^9, 3.757456740578875*^9}, {3.757456914406567*^9, 
   3.757456937919743*^9}, 3.757456974082659*^9, {3.757457118392558*^9, 
   3.7574571504171047`*^9}, {3.757457186887327*^9, 3.757457202857049*^9}, {
   3.757457431570582*^9, 3.757457490384235*^9}},
 CellLabel->
  "Out[818]=",ExpressionUUID->"8ba2999f-f2b8-448b-932c-e0d6cfa86873"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"9.99959142857143`\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"6.23265549826393`*^52\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \\\"[\\\", \
RowBox[{FractionBox[RowBox[{\\\"5\\\", \\\" \\\", \\\"\[Pi]\\\"}], \
\\\"2\\\"], \\\",\\\", RowBox[{\\\"-\\\", \\\"9.99959142857143`\\\"}]}], \
\\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,821,1411,
   24779333516911052862,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.757457151382951*^9, {3.757457187864667*^9, 3.757457203824636*^9}, {
   3.757457432523673*^9, 3.757457490571809*^9}},
 CellLabel->
  "During evaluation of \
In[812]:=",ExpressionUUID->"3eed0282-c3da-474d-8ab1-5e3e14ce2c16"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"9.99959142857143`\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \
\\\"6.23265549826393`*^52\\\"}]}], \\\"}\\\"}], \\\"}\\\"}], \\\"[\\\", \
RowBox[{\\\"7.853981633974483`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"9.99959142857143`\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list \
of replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,821,1412,24779333516911052862,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.757457151382951*^9, {3.757457187864667*^9, 3.757457203824636*^9}, {
   3.757457432523673*^9, 3.757457490595684*^9}},
 CellLabel->
  "During evaluation of \
In[812]:=",ExpressionUUID->"68d12ee7-5abd-4dee-9f08-ae72368f8f4d"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"9.591428163265308`\\\"}], \\\"]\\\"}], \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"3.6907947293475447`*^50\\\"}]}], \\\"}\\\"}], \
\\\"}\\\"}], \\\"[\\\", RowBox[{FractionBox[RowBox[{\\\"5\\\", \\\" \\\", \
\\\"\[Pi]\\\"}], \\\"2\\\"], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"9.591428163265308`\\\"}]}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list \
of replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,821,1413,24779333516911052862,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.757457151382951*^9, {3.757457187864667*^9, 3.757457203824636*^9}, {
   3.757457432523673*^9, 3.757457490658304*^9}},
 CellLabel->
  "During evaluation of \
In[812]:=",ExpressionUUID->"a92a1d72-27c8-4fad-bbef-ed63adc53165"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,821,1414,24779333516911052862,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.757457151382951*^9, {3.757457187864667*^9, 3.757457203824636*^9}, {
   3.757457432523673*^9, 3.757457490664041*^9}},
 CellLabel->
  "During evaluation of \
In[812]:=",ExpressionUUID->"9bbb1c38-22d1-4852-b2a5-f1f4b0ab718f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"x\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757453950764147*^9, {3.7574541218807917`*^9, 3.757454151016184*^9}, 
   3.7574542543743143`*^9, 3.757455307435153*^9, {3.757455363009901*^9, 
   3.7574553988325253`*^9}, {3.7574554303688393`*^9, 3.757455450274148*^9}, 
   3.757455513602841*^9, 3.757456382388397*^9, 3.757456523593402*^9, 
   3.757456562815567*^9, 3.757456606076771*^9, 3.757456645733593*^9, {
   3.7574567184150143`*^9, 3.757456740578875*^9}, {3.757456914406567*^9, 
   3.757456937919743*^9}, 3.757456974082659*^9, {3.757457118392558*^9, 
   3.7574571504171047`*^9}, {3.757457186887327*^9, 3.757457202857049*^9}, {
   3.757457431570582*^9, 3.757457490713447*^9}},
 CellLabel->
  "Out[821]=",ExpressionUUID->"751c6cfe-3c79-42c8-8634-42ef9b6a8210"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Beta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Beta]$$], 0, 4 Pi}}, Typeset`size$$ = {
    360., {116., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Beta]$42318$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Beta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$42318$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`traj[$CellContext`\[Beta]$$], 
      "Specifications" :> {{$CellContext`\[Beta]$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {161., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.757453950764147*^9, {3.7574541218807917`*^9, 3.757454151016184*^9}, 
   3.7574542543743143`*^9, 3.757455307435153*^9, {3.757455363009901*^9, 
   3.7574553988325253`*^9}, {3.7574554303688393`*^9, 3.757455450274148*^9}, 
   3.757455513602841*^9, 3.757456382388397*^9, 3.757456523593402*^9, 
   3.757456562815567*^9, 3.757456606076771*^9, 3.757456645733593*^9, {
   3.7574567184150143`*^9, 3.757456740578875*^9}, {3.757456914406567*^9, 
   3.757456937919743*^9}, 3.757456974082659*^9, {3.757457118392558*^9, 
   3.7574571504171047`*^9}, {3.757457186887327*^9, 3.757457202857049*^9}, {
   3.757457431570582*^9, 3.757457490858308*^9}},
 CellLabel->
  "Out[822]=",ExpressionUUID->"033ff618-8f3b-4b82-971e-6716295f259d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Problem", " ", "4"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"debug", "=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$Assumptions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[Omega]", "0"], ",", "\[Beta]"}], "}"}], ",", 
         "Reals"}], "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Beta]", "^", "2"}], ")"}], "<", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "0"], "^", "2"}], ")"}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Part", " ", "i"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Solving", " ", "the", " ", "DE", " ", "for", " ", "the", " ", 
      "interval", " ", "t"}], "<", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"oscillations", "[", 
      RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"2", "*", "\[Beta]", "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "0"], "^", "2"}], ")"}], "*", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqnlist", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"ic", ",", 
       RowBox[{"oscillations", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln1", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", " ", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Solving", " ", "the", " ", "DE", " ", "for", " ", "the", " ", 
      "interval", " ", "0"}], "<", "t", "<", 
     SubscriptBox["\[Tau]", "0"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oscillations", "[", 
      RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"2", "*", "\[Beta]", "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "0"], "^", "2"}], ")"}], "*", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f", "*", "a", "*", "t"}], ")"}], "/", 
       RowBox[{"(", 
        SubscriptBox["\[Tau]", "0"], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqnlist", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"ic", ",", 
       RowBox[{"oscillations", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln2", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", " ", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Solving", " ", "the", " ", "DE", " ", "for", " ", "the", " ", 
      "interval", " ", "t"}], ">", 
     SubscriptBox["\[Tau]", "0"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"oscillations", "[", 
      RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
       RowBox[{"2", "*", "\[Beta]", "*", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Omega]", "0"], "^", "2"}], ")"}], "*", 
        RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "*", "a", "*", "t"}], ")"}], "/", 
         RowBox[{"(", 
          SubscriptBox["\[Tau]", "0"], ")"}]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", 
             SubscriptBox["\[Tau]", "0"]}], ")"}]}], ")"}], "/", 
         SubscriptBox["\[Tau]", "0"]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "A"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqnlist", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"ic", ",", 
       RowBox[{"oscillations", "[", 
        RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"soln3", "[", 
     RowBox[{"\[Beta]_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{"eqnlist", ",", " ", 
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<For the undriven time interval, the solution to the equations of \
motion is: x[t]\[Rule]\>\"", ",", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", 
      RowBox[{"soln1", "[", 
       RowBox[{"\[Beta]", ",", "t"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<For the driven time interval, the solution to the equations of \
motion is: x[t]\[Rule]\>\"", ",", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", 
      RowBox[{"soln2", "[", 
       RowBox[{"\[Beta]", ",", "t"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<For the driven time interval, the solution to the equations of \
motion is: x[t]\[Rule]\>\"", ",", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", 
      RowBox[{"soln3", "[", 
       RowBox[{"\[Beta]", ",", "t"}], "]"}]}]}], "]"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Part", " ", "ii"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", "1"}], ";", 
    RowBox[{
     SubscriptBox["\[Tau]", "0"], "=", "1"}], ";", 
    RowBox[{"\[Beta]", "=", 
     RowBox[{
      SubscriptBox["\[Omega]", "0"], "/", "3"}]}], ";", 
    RowBox[{"a", "=", "12"}], ";", 
    RowBox[{"f", "=", "0.2"}], ";", 
    RowBox[{
     SubscriptBox["\[Omega]", "0"], "=", 
     RowBox[{"2", "*", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", 
      RowBox[{"soln3", "[", 
       RowBox[{"\[Beta]", ",", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.7574542244357433`*^9, 3.757454239728294*^9}, {
   3.757454293932695*^9, 3.757454682170004*^9}, {3.75745471498061*^9, 
   3.757454877697707*^9}, {3.757455006130335*^9, 3.757455141719079*^9}, {
   3.757455531809204*^9, 3.7574555776437674`*^9}, {3.757455640079715*^9, 
   3.75745564063074*^9}, 3.7574557022490377`*^9, {3.7574557358316793`*^9, 
   3.7574557900722647`*^9}, {3.757455825082789*^9, 3.757455860488181*^9}, {
   3.757455906178492*^9, 3.7574559071171713`*^9}, {3.7574559766614723`*^9, 
   3.7574560186265917`*^9}, {3.7574561029003468`*^9, 3.757456132638546*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"d5d7001a-b5ba-4b99-920f-a20478e5fde6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        "\[Beta]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        "\[Beta]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.757455607828171*^9, 3.757455641686355*^9, 3.757455704074235*^9, {
   3.7574557781450872`*^9, 3.7574557982834682`*^9}, {3.757455833209073*^9, 
   3.757455862619279*^9}, 3.757455909439247*^9, {3.757455998148316*^9, 
   3.757456019985887*^9}, {3.757456105689437*^9, 3.757456133525814*^9}},
 CellLabel->
  "Out[605]=",ExpressionUUID->"91bef7ec-5cea-4f39-a281-0a254f78b00e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", "0"], " ", 
      SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"4", " ", "a", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.757455607828171*^9, 3.757455641686355*^9, 3.757455704074235*^9, {
   3.7574557781450872`*^9, 3.7574557982834682`*^9}, {3.757455833209073*^9, 
   3.757455862619279*^9}, 3.757455909439247*^9, {3.757455998148316*^9, 
   3.757456019985887*^9}, {3.757456105689437*^9, 3.757456133568253*^9}},
 CellLabel->
  "Out[609]=",ExpressionUUID->"e81aa31d-5c9b-4275-9e04-499581eff91d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", "0"], " ", 
      SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "+", 
      RowBox[{"4", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"4", " ", "a", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.757455607828171*^9, 3.757455641686355*^9, 3.757455704074235*^9, {
   3.7574557781450872`*^9, 3.7574557982834682`*^9}, {3.757455833209073*^9, 
   3.757455862619279*^9}, 3.757455909439247*^9, {3.757455998148316*^9, 
   3.757456019985887*^9}, {3.757456105689437*^9, 3.757456133627425*^9}},
 CellLabel->
  "Out[613]=",ExpressionUUID->"d1508d30-72c9-4d23-9918-9c28ee0e2e21"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the undriven time interval, the solution to the equations \
of motion is: x[t]\[Rule]\"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        "\[Beta]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        "\[Beta]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[Beta]", "2"]}], "+", 
               SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
        
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Beta]", "2"]}], "+", 
          SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}]}],
  SequenceForm[
  "For the undriven time interval, the solution to the equations of motion \
is: x[t]\[Rule]", 
   Rational[1, 2] $CellContext`A (-$CellContext`\[Beta]^2 + 
     Subscript[$CellContext`\[Omega], 0]^2)^Rational[-1, 2] (
    Complex[0, 1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] + 
    Complex[0, -1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] + 
    E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + 
    E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.757455607971439*^9, 3.757455641799656*^9, 3.757455704213965*^9, {
   3.757455778294258*^9, 3.757455798399044*^9}, {3.757455833325522*^9, 
   3.757455862735896*^9}, 3.757455909589571*^9, {3.7574559982663803`*^9, 
   3.7574560201340714`*^9}, {3.757456105837343*^9, 3.757456133646983*^9}},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"739107f2-9fc6-45dd-8ce1-550c70b0982a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the driven time interval, the solution to the equations of \
motion is: x[t]\[Rule]\"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", "0"], " ", 
      SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"4", " ", "a", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}],
  SequenceForm[
  "For the driven time interval, the solution to the equations of motion is: \
x[t]\[Rule]", Rational[1, 2] Subscript[$CellContext`\[Tau], 0]^(-1) 
   Subscript[$CellContext`\[Omega], 0]^(-4) (-$CellContext`\[Beta]^2 + 
     Subscript[$CellContext`\[Omega], 0]^2)^Rational[-1, 2] (
    Complex[0, 2] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, -2] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, -1] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, 1] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, 1] $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^4 + 
    Complex[0, -1] $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^4 - 
    4 $CellContext`a $CellContext`f $CellContext`\[Beta] (-$CellContext`\
\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + 
    2 $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[
           1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
      Rational[1, 2] + 
    2 $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[
           1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
      Rational[1, 2] + 
    2 $CellContext`a $CellContext`f $CellContext`t 
     Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])) 
     Subscript[$CellContext`\[Tau], 0] 
     Subscript[$CellContext`\[Omega], 0]^4 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])) 
     Subscript[$CellContext`\[Tau], 0] 
     Subscript[$CellContext`\[Omega], 0]^4 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.757455607971439*^9, 3.757455641799656*^9, 3.757455704213965*^9, {
   3.757455778294258*^9, 3.757455798399044*^9}, {3.757455833325522*^9, 
   3.757455862735896*^9}, 3.757455909589571*^9, {3.7574559982663803`*^9, 
   3.7574560201340714`*^9}, {3.757456105837343*^9, 3.75745613365514*^9}},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"00523dbe-8719-40ee-8e4e-998b9160147d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For the driven time interval, the solution to the equations of \
motion is: x[t]\[Rule]\"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Tau]", "0"], " ", 
      SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], "+", 
        SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "\[Beta]", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"]}], "+", 
      RowBox[{"4", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"4", " ", "a", " ", "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", "\[Beta]", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{"2", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "a", " ", "f", " ", "t", " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"2", " ", "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       "f", " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[Beta]", "2"]}], "+", 
              SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]], " ", 
       SubscriptBox["\[Tau]", "0"], " ", 
       SubsuperscriptBox["\[Omega]", "0", "4"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], "+", 
         SubsuperscriptBox["\[Omega]", "0", "2"]}]]}]}], ")"}]}]}],
  SequenceForm[
  "For the driven time interval, the solution to the equations of motion is: \
x[t]\[Rule]", Rational[1, 2] Subscript[$CellContext`\[Tau], 0]^(-1) 
   Subscript[$CellContext`\[Omega], 0]^(-4) (-$CellContext`\[Beta]^2 + 
     Subscript[$CellContext`\[Omega], 0]^2)^Rational[-1, 2] (
    Complex[0, -2] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, 2] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, 2] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, -2] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta]^2 + 
    Complex[0, 1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, -1] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, -1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, 1] $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f 
     Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, -1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, 1] 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`f $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^2 + 
    Complex[0, 1] $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^4 + 
    Complex[0, -1] $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[1, 2])) $CellContext`\[Beta] 
     Subscript[$CellContext`\[Tau], 0] Subscript[$CellContext`\[Omega], 0]^4 + 
    4 $CellContext`f $CellContext`\[Beta] (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] - 
    4 $CellContext`a $CellContext`f $CellContext`\[Beta] (-$CellContext`\
\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] - 2 
    E^($CellContext`t (-$CellContext`\[Beta] + 
       Complex[0, -1] (-$CellContext`\[Beta]^2 + 
          Subscript[$CellContext`\[Omega], 0]^2)^
         Rational[
          1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
     Rational[1, 2] + 
    2 $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[
           1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
      Rational[1, 2] - 2 
    E^($CellContext`t (-$CellContext`\[Beta] + 
       Complex[0, 1] (-$CellContext`\[Beta]^2 + 
          Subscript[$CellContext`\[Omega], 0]^2)^
         Rational[
          1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
     Rational[1, 2] + 
    2 $CellContext`a 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^
          Rational[
           1, 2])) $CellContext`f $CellContext`\[Beta] \
(-$CellContext`\[Beta]^2 + Subscript[$CellContext`\[Omega], 0]^2)^
      Rational[1, 2] - 2 $CellContext`f $CellContext`t 
    Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
      Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + 
    2 $CellContext`a $CellContext`f $CellContext`t 
     Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + 
    2 $CellContext`f Subscript[$CellContext`\[Tau], 0] 
     Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] - 
    E^($CellContext`t (-$CellContext`\[Beta] + 
       Complex[0, -1] (-$CellContext`\[Beta]^2 + 
          Subscript[$CellContext`\[Omega], 0]^2)^
         Rational[1, 2])) $CellContext`f Subscript[$CellContext`\[Tau], 0] 
    Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
      Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] - 
    E^($CellContext`t (-$CellContext`\[Beta] + 
       Complex[0, 1] (-$CellContext`\[Beta]^2 + 
          Subscript[$CellContext`\[Omega], 0]^2)^
         Rational[1, 2])) $CellContext`f Subscript[$CellContext`\[Tau], 0] 
    Subscript[$CellContext`\[Omega], 0]^2 (-$CellContext`\[Beta]^2 + 
      Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, -1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])) 
     Subscript[$CellContext`\[Tau], 0] 
     Subscript[$CellContext`\[Omega], 0]^4 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2] + $CellContext`A 
     E^($CellContext`t (-$CellContext`\[Beta] + 
        Complex[0, 1] (-$CellContext`\[Beta]^2 + 
           Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])) 
     Subscript[$CellContext`\[Tau], 0] 
     Subscript[$CellContext`\[Omega], 0]^4 (-$CellContext`\[Beta]^2 + 
       Subscript[$CellContext`\[Omega], 0]^2)^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.757455607971439*^9, 3.757455641799656*^9, 3.757455704213965*^9, {
   3.757455778294258*^9, 3.757455798399044*^9}, {3.757455833325522*^9, 
   3.757455862735896*^9}, 3.757455909589571*^9, {3.7574559982663803`*^9, 
   3.7574560201340714`*^9}, {3.757456105837343*^9, 3.757456133671164*^9}},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"4fb26c3b-358b-4294-949d-bf7a283a67ed"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JvhyiH11d5cLQfKvhY47NcH/ADmn4jQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$34121#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"x\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757455607828171*^9, 3.757455641686355*^9, 3.757455704074235*^9, {
   3.7574557781450872`*^9, 3.7574557982834682`*^9}, {3.757455833209073*^9, 
   3.757455862619279*^9}, 3.757455909439247*^9, {3.757455998148316*^9, 
   3.757456019985887*^9}, {3.757456105689437*^9, 3.757456134331601*^9}},
 CellLabel->
  "Out[618]=",ExpressionUUID->"f986e940-b005-4442-aab4-3868c04b803f"]
}, Open  ]]
},
WindowSize->{665, 682},
WindowMargins->{{Automatic, 14}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 294, 9, 127, "Text",ExpressionUUID->"351596ac-ba08-454b-8e86-fcde2a055e4e"],
Cell[CellGroupData[{
Cell[877, 33, 1722, 39, 178, "Input",ExpressionUUID->"30f763eb-cb62-464f-8d01-2e3085a540a7"],
Cell[CellGroupData[{
Cell[2624, 76, 257, 5, 24, "Print",ExpressionUUID->"aa6702cc-87fc-4ca0-9fe9-9bc996498b24"],
Cell[2884, 83, 519, 16, 40, "Print",ExpressionUUID->"aa166834-e0de-453c-996b-6653c3ffc4e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3452, 105, 1513, 42, 94, "Input",ExpressionUUID->"fa02a71e-156a-4b40-8bd4-da6f96e8b698"],
Cell[4968, 149, 559, 15, 50, "Output",ExpressionUUID->"618d2e67-e4ef-41d7-8b1d-00133f66ff19"],
Cell[5530, 166, 472, 12, 37, "Output",ExpressionUUID->"c9be915e-6494-46a4-ae8b-dd98263a310a"],
Cell[6005, 180, 7300, 138, 244, "Output",ExpressionUUID->"7df76d6b-17fd-45a5-ad35-ea283fd9233e"]
}, Open  ]],
Cell[13320, 321, 148, 2, 30, InheritFromParent,ExpressionUUID->"766d4865-703f-4289-8ac9-8af326d0faa7"],
Cell[CellGroupData[{
Cell[13493, 327, 2680, 77, 199, "Input",ExpressionUUID->"2baa8e1f-5916-4d9a-a50b-d72ca0167835"],
Cell[CellGroupData[{
Cell[16198, 408, 565, 9, 44, "Print",ExpressionUUID->"e9074027-befe-4ce7-98e2-e0a38d55ba10"],
Cell[16766, 419, 3682, 112, 165, "Print",ExpressionUUID->"41882d40-c415-43f5-9fd1-3d313cc7fdc3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20497, 537, 871, 24, 52, "Input",ExpressionUUID->"c141fe9d-3d8e-4336-a36e-b89609bed999"],
Cell[21371, 563, 25002, 433, 240, "Output",ExpressionUUID->"da624ef6-77b8-4496-9ec0-7e6d6664d7da"]
}, Open  ]],
Cell[46388, 999, 152, 3, 30, InheritFromParent,ExpressionUUID->"89223d91-0667-4089-9f4d-29005c19d4b0"],
Cell[CellGroupData[{
Cell[46565, 1006, 4776, 132, 283, "Input",ExpressionUUID->"a47bf965-95d0-4efb-a225-6649e66d877f"],
Cell[51344, 1140, 2973, 79, 154, "Output",ExpressionUUID->"4707a211-ed88-46b6-9c39-43cf705c2b2a"],
Cell[54320, 1221, 40792, 688, 240, "Output",ExpressionUUID->"af701279-4354-42c2-8d16-45b115084347"],
Cell[95115, 1911, 34518, 583, 240, "Output",ExpressionUUID->"8ba2999f-f2b8-448b-932c-e0d6cfa86873"],
Cell[129636, 2496, 961, 18, 59, "Message",ExpressionUUID->"3eed0282-c3da-474d-8ab1-5e3e14ce2c16"],
Cell[130600, 2516, 914, 17, 48, "Message",ExpressionUUID->"68d12ee7-5abd-4dee-9f08-ae72368f8f4d"],
Cell[131517, 2535, 963, 18, 59, "Message",ExpressionUUID->"a92a1d72-27c8-4fad-bbef-ed63adc53165"],
Cell[132483, 2555, 551, 12, 24, "Message",ExpressionUUID->"9bbb1c38-22d1-4852-b2a5-f1f4b0ab718f"],
Cell[133037, 2569, 1911, 45, 253, "Output",ExpressionUUID->"751c6cfe-3c79-42c8-8634-42ef9b6a8210"],
Cell[134951, 2616, 2319, 44, 347, "Output",ExpressionUUID->"033ff618-8f3b-4b82-971e-6716295f259d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137307, 2665, 9173, 264, 871, "Input",ExpressionUUID->"d5d7001a-b5ba-4b99-920f-a20478e5fde6"],
Cell[146483, 2931, 2949, 84, 154, "Output",ExpressionUUID->"91bef7ec-5cea-4f39-a281-0a254f78b00e"],
Cell[149435, 3017, 7224, 196, 349, "Output",ExpressionUUID->"e81aa31d-5c9b-4275-9e04-499581eff91d"],
Cell[156662, 3215, 13857, 380, 579, "Output",ExpressionUUID->"d1508d30-72c9-4d23-9918-9c28ee0e2e21"],
Cell[CellGroupData[{
Cell[170544, 3599, 4277, 110, 187, "Print",ExpressionUUID->"739107f2-9fc6-45dd-8ce1-550c70b0982a"],
Cell[174824, 3711, 11041, 269, 358, "Print",ExpressionUUID->"00523dbe-8719-40ee-8e4e-998b9160147d"],
Cell[185868, 3982, 21129, 520, 572, "Print",ExpressionUUID->"4fb26c3b-358b-4294-949d-bf7a283a67ed"]
}, Open  ]],
Cell[207012, 4505, 15646, 273, 249, "Output",ExpressionUUID->"f986e940-b005-4442-aab4-3868c04b803f"]
}, Open  ]]
}
]
*)

